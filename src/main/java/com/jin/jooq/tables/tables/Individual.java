/*
 * This file is generated by jOOQ.
*/
package com.jin.jooq.tables.tables;


import com.jin.jooq.tables.Cyui;
import com.jin.jooq.tables.Indexes;
import com.jin.jooq.tables.Keys;
import com.jin.jooq.tables.tables.records.IndividualRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Individual extends TableImpl<IndividualRecord> {

    private static final long serialVersionUID = 1941061698;

    /**
     * The reference instance of <code>cyui.individual</code>
     */
    public static final Individual INDIVIDUAL = new Individual();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndividualRecord> getRecordType() {
        return IndividualRecord.class;
    }

    /**
     * The column <code>cyui.individual.ID</code>. 主键
     */
    public final TableField<IndividualRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>cyui.individual.USER_NAME</code>. 用户名
     */
    public final TableField<IndividualRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "用户名");

    /**
     * The column <code>cyui.individual.USER_PASSWORD</code>. 密码(MD5加密)
     */
    public final TableField<IndividualRecord, String> USER_PASSWORD = createField("USER_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "密码(MD5加密)");

    /**
     * The column <code>cyui.individual.USER_NICE_NAME</code>. 昵称
     */
    public final TableField<IndividualRecord, String> USER_NICE_NAME = createField("USER_NICE_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "昵称");

    /**
     * The column <code>cyui.individual.USER_IMG_URL</code>. 图像地址
     */
    public final TableField<IndividualRecord, String> USER_IMG_URL = createField("USER_IMG_URL", org.jooq.impl.SQLDataType.VARCHAR(255), this, "图像地址");

    /**
     * The column <code>cyui.individual.PHONE_NUMBER</code>. 手机号
     */
    public final TableField<IndividualRecord, String> PHONE_NUMBER = createField("PHONE_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(11), this, "手机号");

    /**
     * The column <code>cyui.individual.USER_BIRTHDAY</code>. 生日
     */
    public final TableField<IndividualRecord, Date> USER_BIRTHDAY = createField("USER_BIRTHDAY", org.jooq.impl.SQLDataType.DATE, this, "生日");

    /**
     * The column <code>cyui.individual.UTIME</code>. 修改时间
     */
    public final TableField<IndividualRecord, Timestamp> UTIME = createField("UTIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>cyui.individual.CTIME</code>. 创建时间
     */
    public final TableField<IndividualRecord, Timestamp> CTIME = createField("CTIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>cyui.individual.ROLE</code>. 1,超级管理员 2，管理  3，普通用户
     */
    public final TableField<IndividualRecord, String> ROLE = createField("ROLE", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "1,超级管理员 2，管理  3，普通用户");

    /**
     * Create a <code>cyui.individual</code> table reference
     */
    public Individual() {
        this(DSL.name("individual"), null);
    }

    /**
     * Create an aliased <code>cyui.individual</code> table reference
     */
    public Individual(String alias) {
        this(DSL.name(alias), INDIVIDUAL);
    }

    /**
     * Create an aliased <code>cyui.individual</code> table reference
     */
    public Individual(Name alias) {
        this(alias, INDIVIDUAL);
    }

    private Individual(Name alias, Table<IndividualRecord> aliased) {
        this(alias, aliased, null);
    }

    private Individual(Name alias, Table<IndividualRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cyui.CYUI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDIVIDUAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<IndividualRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INDIVIDUAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IndividualRecord> getPrimaryKey() {
        return Keys.KEY_INDIVIDUAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IndividualRecord>> getKeys() {
        return Arrays.<UniqueKey<IndividualRecord>>asList(Keys.KEY_INDIVIDUAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Individual as(String alias) {
        return new Individual(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Individual as(Name alias) {
        return new Individual(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Individual rename(String name) {
        return new Individual(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Individual rename(Name name) {
        return new Individual(name, null);
    }
}
